var fs = require('fs');
var jsonlint = require("./libs/jsonlint.js").parser;

try{
	var generator = process.argv[2]; //get IOS lang file
	if (!fs.existsSync(generator)) throw "The iOS origin JSON string file does not exist (filename: " + generator + ")";

	var JSONOriginFile = process.argv[3]; //get generic origin lang file
	if (!fs.existsSync(JSONOriginFile)) throw "The iOS origin JSON string file does not exist (filename: " + JSONOriginFile + ")";

	var outputFile = process.argv[4]; //get generic origin lang file
	if (!outputFile) throw "you must specify a output file name";

	
	//Read origin po file, and remove the "\r\n" for the content translations, removing accidentally EOL generated by po tool
	var generatorResources = fs.readFileSync(generator, "utf8").toString();
	var i=generatorResources.indexOf("#:");
	generatorResources = generatorResources.substring(0,i) + generatorResources.substring(i,generatorResources.length).replace(/"\r\n"/g, '');
	generatorResources = generatorResources.split('\r\n');
	
	var genericOriginSringResources = jsonlint.parse(fs.readFileSync(JSONOriginFile, "utf8")); //parse the origin js language

	if (generatorResources.length<=2) throw "It seems that the End Of Line code is not setted to unix. On Sublime,set  View->Line Endings->Windows";
	
	var language = null;

	for (var i=0; i<generatorResources.length; i++){

		//detect Language
		if (generatorResources[i].indexOf('Language:')>=0) {
			language = generatorResources[i].replace(/ /g, '').substring(generatorResources[i].indexOf(':') +1, POOriginSringResources[i].length).replace("_ES", "-ES").replace("_US", "-US");
			if (language.indexOf('\\n')>0) language = language.substring(0, language.indexOf('\\n'));
			if ((language !=='es-ES') && (language !=='en-US') && (language !=='ca-ES') && (language !=='eu-ES') && (language !=='gl-ES') && (language !=='ca_va-ES')) throw "you must specify a valid language (p.ex: es-ES)";
		}


		if (generatorResources[i].indexOf('#:')>=0) {
			var code = generatorResources[i].replace(/ /, '').replace('#:','').replace(/"/g,'') + '.' + language;
			var traduccion = generatorResources[i+3].replace(/ "/, '"').replace('msgstr"', '');
			traduccion = traduccion.substring(0,traduccion.length-1);

			try{ 
				var sentence = "genericOriginSringResources['" + code.replace(/\./g,"']['") + "'] = '" + traduccion.replace(/'/g, "\\'").replace(/\//g, "\\/") + "'";
				eval(sentence);
			}catch (e){
				console.log(sentence);
			}

		}
	}


	fs.writeFile(outputFile, JSON.stringify(genericOriginSringResources, null, "\t"), function(err) {
	    if(err) {
      		console.log(err);
    	} else {
      		console.log("JSON saved to " + outputFile);
    	}
	});



	console.log("");
	console.log("------------------RESULT------------------");
	console.log("");
	console.log("Language files created correctly");
	console.log("");
	console.log("------------------------------------------");
	console.log("");

}catch (ex){
	console.log("");
	console.log("------------------ERROR------------------");
	console.log("");
	console.log(ex);
	console.log("");
	console.log("-----------------------------------------");
	console.log("");
}